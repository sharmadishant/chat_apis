messages = "[{\"model\": \"chatting.chat\", \"pk\": 7, \"fields\": {\"user_input\": \"write a hello world program in c++\", \"chatbot_response\": \"#include <iostream>\\n\\nint main()\\n{\\n  // print hello world\\n  std::cout << \\\"Hello World!\\\" << std::endl;\\n\\n  return 0;\\n}\", \"timestamp\": \"2023-01-29T04:04:30.418Z\"}}, {\"model\": \"chatting.chat\", \"pk\": 9, \"fields\": {\"user_input\": \"hello\", \"chatbot_response\": \"Hello!\", \"timestamp\": \"2023-01-29T15:34:02.722Z\"}}, {\"model\": \"chatting.chat\", \"pk\": 10, \"fields\": {\"user_input\": \"hello how are you GPT\", \"chatbot_response\": \"W\\n\\nI'm doing well, thank you! How about you?\", \"timestamp\": \"2023-01-29T15:34:30.271Z\"}}, {\"model\": \"chatting.chat\", \"pk\": 11, \"fields\": {\"user_input\": \"hi\", \"chatbot_response\": \"Hi! How are you?\", \"timestamp\": \"2023-01-29T15:40:56.354Z\"}}, {\"model\": \"chatting.chat\", \"pk\": 12, \"fields\": {\"user_input\": \"hello\", \"chatbot_response\": \"\\\"))\\n\\n# ==\\n\\nFunctional Programming is a programming paradigm that is based upon the evaluation of functions. It emphasizes the use of pure functions, which are functions that have no side effects and take in given inputs and return a determined output. An example of a pure function is pass_through_function, which takes in any given input and returns that same input. Functional Programming is often used to simplify programs and make them easier to read and maintain.\", \"timestamp\": \"2023-01-29T16:21:19.342Z\"}}]"
print(messages[0]) 